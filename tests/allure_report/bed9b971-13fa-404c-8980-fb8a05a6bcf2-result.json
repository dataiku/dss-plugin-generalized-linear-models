{"name": "test_link_function", "status": "broken", "statusDetails": {"message": "ValueError: NaN, inf or invalid value detected in weights, estimation infeasible.", "trace": "def test_link_function():\n        case = unittest.TestCase()\n        expected = [\n            sm.families.links.log(),\n            sm.families.links.identity(),\n            sm.families.links.inverse_power(),\n            sm.families.links.inverse_squared(),\n            sm.families.links.log(),\n            sm.families.links.cloglog(),\n            sm.families.links.Power(1),\n        ]\n    \n        actual = []\n    \n        boston = datasets.load_boston()\n        X, y = boston.data, boston  .target\n    \n        for test in testing_dict_regression:\n            test_params = testing_dict_regression[test]\n            regression_model = RegressionGLM(\n                family_name=test_params['family_name'],\n                binomial_link=test_params['binomial_link'],\n                gamma_link=test_params['gamma_link'],\n                gaussian_link=test_params['gaussian_link'],\n                inverse_gaussian_link=test_params['inverse_gaussian_link'],\n                poisson_link=test_params['poisson_link'],\n                negative_binomial_link=test_params['negative_binomial_link'],\n                tweedie_link=test_params['tweedie_link'],\n                alpha=1,\n                power=1,\n                var_power=1\n            )\n>           regression_model.fit_model(X, y)\n\ntests/python/unit/test_regression_model.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npython-lib/generalized_linear_models/dku_glm.py:121: in fit_model\n    self.fitted_model = model.fit()\n../../virtual_environments/glm_testing/lib/python3.9/site-packages/statsmodels/genmod/generalized_linear_model.py:1063: in fit\n    return self._fit_irls(start_params=start_params, maxiter=maxiter,\n../../virtual_environments/glm_testing/lib/python3.9/site-packages/statsmodels/genmod/generalized_linear_model.py:1200: in _fit_irls\n    wls_mod = reg_tools._MinimalWLS(wlsendog, wlsexog,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <statsmodels.regression._tools._MinimalWLS object at 0x12460a1f0>\nendog = array([ 1.52380969e-03,  2.06816703e-03,  8.23599492e-04,  8.89336977e-04,\n        5.19205105e-04,  1.20212828e-03,  1...3,\n        3.35432635e-03,  1.97857005e-03,  2.33674978e-03,  1.71491234e-03,\n        2.00282624e-03,  3.83679292e-03])\nexog = array([[1.0000e+00, 6.3200e-03, 1.8000e+01, ..., 1.5300e+01, 3.9690e+02,\n        4.9800e+00],\n       [1.0000e+00, 2.73...02,\n        6.4800e+00],\n       [1.0000e+00, 4.7410e-02, 0.0000e+00, ..., 2.1000e+01, 3.9690e+02,\n        7.8800e+00]])\nweights = array([7.23869423e+03, 3.60317722e+03, 8.97817650e+03, 8.03633145e+03,\n       5.42154804e+03, 5.01633580e+03, 2.629030...561e+03,\n       1.86335135e+03, 2.43888803e+03, 2.57997388e+03, 4.45454972e+03,\n       3.71030065e+03, 2.84719029e+03])\ncheck_endog = True, check_weights = True\n\n    def __init__(self, endog, exog, weights=1.0, check_endog=False,\n                 check_weights=False):\n        self.endog = endog\n        self.exog = exog\n        self.weights = weights\n        w_half = np.sqrt(weights)\n        if check_weights:\n            if not np.all(np.isfinite(w_half)):\n>               raise ValueError(self.msg.format('weights'))\nE               ValueError: NaN, inf or invalid value detected in weights, estimation infeasible.\n\n../../virtual_environments/glm_testing/lib/python3.9/site-packages/statsmodels/regression/_tools.py:48: ValueError"}, "start": 1626707796025, "stop": 1626707796045, "uuid": "af9968aa-cf99-45f0-a92f-8d805c6a4901", "historyId": "07dc7000aec000ea0d36dd08a4ab2f71", "testCaseId": "0d0045312d2c62243fa4a91b84500010", "fullName": "tests.python.unit.test_regression_model#test_link_function", "labels": [{"name": "parentSuite", "value": "tests.python.unit"}, {"name": "suite", "value": "test_regression_model"}, {"name": "host", "value": "Matthews-MBP"}, {"name": "thread", "value": "22075-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.python.unit.test_regression_model"}]}