{"name": "test_link_function", "status": "broken", "statusDetails": {"message": "ValueError: NaN, inf or invalid value detected in weights, estimation infeasible.", "trace": "def test_link_function():\n        case = unittest.TestCase()\n        expected = [\n            sm.families.links.log(),\n            sm.families.links.identity(),\n            sm.families.links.inverse_power(),\n            sm.families.links.inverse_squared(),\n            sm.families.links.log(),\n            sm.families.links.cloglog(),\n            sm.families.links.Power(1),\n        ]\n    \n        actual = []\n    \n        diabetes = datasets.load_diabetes()\n        X, y = diabetes.data, diabetes.target\n    \n        for test in testing_dict:\n            test_params = testing_dict[test]\n            regression_model = RegressionGLM(\n                family_name=test_params['family_name'],\n                binomial_link=test_params['binomial_link'],\n                gamma_link=test_params['gamma_link'],\n                gaussian_link=test_params['gaussian_link'],\n                inverse_gaussian_link=test_params['inverse_gaussian_link'],\n                poisson_link=test_params['poisson_link'],\n                negative_binomial_link=test_params['negative_binomial_link'],\n                tweedie_link=test_params['tweedie_link'],\n                alpha=1,\n                power=1,\n                var_power=1\n            )\n>           regression_model.fit_model(X, y)\n\ntests/python/unit/test_regression_model.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npython-lib/generalized_linear_models/dku_glm.py:121: in fit_model\n    self.fitted_model = model.fit()\n../../virtual_environments/glm_testing/lib/python3.9/site-packages/statsmodels/genmod/generalized_linear_model.py:1063: in fit\n    return self._fit_irls(start_params=start_params, maxiter=maxiter,\n../../virtual_environments/glm_testing/lib/python3.9/site-packages/statsmodels/genmod/generalized_linear_model.py:1200: in _fit_irls\n    wls_mod = reg_tools._MinimalWLS(wlsendog, wlsexog,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <statsmodels.regression._tools._MinimalWLS object at 0x122412cd0>\nendog = array([ 3.45180035e-05,  1.53842777e-04,  4.81649960e-05,  2.03482825e-05,\n        5.44751166e-05,  9.99967550e-05,  3...4,\n        2.20659059e-04,  2.95021209e-05,  8.74030440e-05,  5.60160538e-05,\n        1.92519588e-05,  2.00902117e-04])\nexog = array([[ 1.        ,  0.03807591,  0.05068012, ..., -0.00259226,\n         0.01990842, -0.01764613],\n       [ 1.       ...837, -0.02593034],\n       [ 1.        , -0.04547248, -0.04464164, ..., -0.03949338,\n        -0.00421986,  0.00306441]])\nweights = array([2.48356781e+06, 2.31248482e+05, 1.04316211e+06, 1.26363359e+06,\n       5.34096634e+05, 3.68755516e+05, 2.825776...001e+05,\n       2.13916630e+05, 2.34346880e+06, 4.44974944e+05, 4.47789646e+05,\n       4.48326772e+06, 2.10856153e+05])\ncheck_endog = True, check_weights = True\n\n    def __init__(self, endog, exog, weights=1.0, check_endog=False,\n                 check_weights=False):\n        self.endog = endog\n        self.exog = exog\n        self.weights = weights\n        w_half = np.sqrt(weights)\n        if check_weights:\n            if not np.all(np.isfinite(w_half)):\n>               raise ValueError(self.msg.format('weights'))\nE               ValueError: NaN, inf or invalid value detected in weights, estimation infeasible.\n\n../../virtual_environments/glm_testing/lib/python3.9/site-packages/statsmodels/regression/_tools.py:48: ValueError"}, "start": 1626698678497, "stop": 1626698678532, "uuid": "bab375c7-3b73-4bea-a489-8ad1774d7191", "historyId": "07dc7000aec000ea0d36dd08a4ab2f71", "testCaseId": "0d0045312d2c62243fa4a91b84500010", "fullName": "tests.python.unit.test_regression_model#test_link_function", "labels": [{"name": "parentSuite", "value": "tests.python.unit"}, {"name": "suite", "value": "test_regression_model"}, {"name": "host", "value": "Matthews-MBP"}, {"name": "thread", "value": "17480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.python.unit.test_regression_model"}]}